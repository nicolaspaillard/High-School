using Models;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;

namespace Dal
{
    //Permet d'initialiser la base en utilisant le contexte
    // Contexte.Initialise();
    public static class HighSchoolContextExtension
    {
        public static void Initialize(this HighSchoolContext context, bool dropAlways = false)
        {
            if (dropAlways)
                context.Database.EnsureDeleted();

            context.Database.EnsureCreated();

            //if db has been already seeded
            if (context.Students.Any())
                return;

            var rand = new Random();

            #region STUDENTS
            List<Student> students = new List<Student>()
            {
                new() { FirstName = "Douglas", LastName = "Dominic", Email = "felis@Fuscealiquam.com",Role=Role.Student, BirthDate = DateTime.ParseExact("11/06/2009", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Hughes", LastName = "Callum", Email = "parturient.montes@enimSuspendisse.ca",Role=Role.Student, BirthDate = DateTime.ParseExact("22/08/2003", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Richard", LastName = "Quentin", Email = "malesuada.id.erat@fringillaeuismod.co.uk", Role=Role.Student,BirthDate = DateTime.ParseExact("14/02/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Sims", LastName = "Giselle", Email = "tellus.faucibus@nullaIn.org",Role=Role.Student, BirthDate = DateTime.ParseExact("06/01/2002", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Cross", LastName = "Whilemina", Email = "ut.ipsum.ac@InfaucibusMorbi.ca",Role=Role.Student, BirthDate = DateTime.ParseExact("09/03/2006", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Carver", LastName = "Leo", Email = "non.justo.Proin@penatibusetmagnis.edu",Role=Role.Student, BirthDate = DateTime.ParseExact("23/09/2018", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Price", LastName = "Lara", Email = "posuere@maurisidsapien.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("24/03/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Gutierrez", LastName = "Cole", Email = "Nunc.mauris.sapien@Inatpede.org", Role=Role.Student,BirthDate = DateTime.ParseExact("19/06/2010", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Serrano", LastName = "Odette", Email = "Mauris.ut.quam@ac.org", Role=Role.Student,BirthDate = DateTime.ParseExact("05/03/2017", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Hyde", LastName = "Nigel", Email = "neque.sed@Pellentesque.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("15/01/2001", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Reilly", LastName = "Philip", Email = "ac.mattis@Curabitur.com", Role=Role.Student,BirthDate = DateTime.ParseExact("23/03/2001", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Chaney", LastName = "Timon", Email = "in.consectetuer@sedsem.org",Role=Role.Student, BirthDate = DateTime.ParseExact("16/11/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Conner", LastName = "Stewart", Email = "mus@vulputateveliteu.co.uk", Role=Role.Student,BirthDate = DateTime.ParseExact("23/08/2000", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Marshall", LastName = "Quin", Email = "nisl.sem.consequat@disparturientmontes.com",Role=Role.Student, BirthDate = DateTime.ParseExact("11/03/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Lester", LastName = "Madeson", Email = "Phasellus@felisegetvarius.org",Role=Role.Student, BirthDate = DateTime.ParseExact("17/12/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Wilson", LastName = "Kevin", Email = "Nunc.ut@nuncsedlibero.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("29/10/2003", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mckenzie", LastName = "Henry", Email = "nunc.risus.varius@elementumloremut.net",Role=Role.Student, BirthDate = DateTime.ParseExact("17/06/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Butler", LastName = "Adara", Email = "erat.vel@eleifend.com", Role=Role.Student,BirthDate = DateTime.ParseExact("09/04/2015", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Harris", LastName = "Carissa", Email = "nec@ornare.com",Role=Role.Student, BirthDate = DateTime.ParseExact("22/12/2003", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Burt", LastName = "Caldwell", Email = "adipiscing.enim@magna.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("29/05/2003", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Farrell", LastName = "Hedley", Email = "id.blandit@velit.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("25/06/2012", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Orr", LastName = "Knox", Email = "mi.tempor.lorem@nuncid.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("27/04/2018", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Floyd", LastName = "Evangeline", Email = "nunc@vestibulum.com", Role=Role.Student,BirthDate = DateTime.ParseExact("10/07/2007", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Patterson", LastName = "Aretha", Email = "inceptos@blanditcongueIn.org", Role=Role.Student,BirthDate = DateTime.ParseExact("29/05/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Hall", LastName = "Geraldine", Email = "nunc@tortordictumeu.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("02/09/2014", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Doyle", LastName = "Henry", Email = "justo.Praesent@infaucibusorci.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("01/01/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Hawkins", LastName = "Macon", Email = "aptent.taciti.sociosqu@atlacus.net", Role=Role.Student,BirthDate = DateTime.ParseExact("27/04/2008", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Wolf", LastName = "Maya", Email = "accumsan.neque.et@nullaInteger.edu",Role=Role.Student, BirthDate = DateTime.ParseExact("22/04/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mcgee", LastName = "Henry", Email = "ipsum.non.arcu@nibh.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("16/10/2015", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Vasquez", LastName = "Lara", Email = "sodales@tortorNunc.ca",Role=Role.Student, BirthDate = DateTime.ParseExact("04/04/2000", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Bernard", LastName = "Olympia", Email = "Etiam.imperdiet@dapibusgravida.co.uk", Role=Role.Student,BirthDate = DateTime.ParseExact("08/02/2001", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Franklin", LastName = "Ariana", Email = "dui.lectus.rutrum@egetvolutpatornare.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("15/08/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Good", LastName = "Tashya", Email = "eu@adipiscingMauris.org", Role=Role.Student,BirthDate = DateTime.ParseExact("18/06/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Garza", LastName = "James", Email = "rhoncus.id@ipsumCurabiturconsequat.co.uk", Role=Role.Student,BirthDate = DateTime.ParseExact("05/06/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mercer", LastName = "Athena", Email = "at@quisurna.org", Role=Role.Student,BirthDate = DateTime.ParseExact("28/08/2003", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Day", LastName = "Asher", Email = "congue.turpis@risusvarius.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("27/10/2008", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Black", LastName = "Aquila", Email = "neque@Crasegetnisi.net",Role=Role.Student, BirthDate = DateTime.ParseExact("12/10/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Gay", LastName = "James", Email = "convallis@egestasDuisac.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("29/06/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Booker", LastName = "Jolie", Email = "dolor@aliquet.org", Role=Role.Student,BirthDate = DateTime.ParseExact("07/06/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Stark", LastName = "Karen", Email = "lobortis.ultrices@ac.com", Role=Role.Student,BirthDate = DateTime.ParseExact("14/04/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mccray", LastName = "Clayton", Email = "diam@gravidasit.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("29/11/2016", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Charles", LastName = "Armando", Email = "at.pretium@adipiscinglacus.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("13/02/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Norton", LastName = "Martina", Email = "ut.mi@nonenimcommodo.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("09/07/2001", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Ramos", LastName = "Kenyon", Email = "Donec@etarcuimperdiet.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("03/03/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Collier", LastName = "Cecilia", Email = "In@augueut.net",Role=Role.Student, BirthDate = DateTime.ParseExact("05/06/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mccall", LastName = "Lareina", Email = "lectus.Nullam.suscipit@sitametrisus.edu",Role=Role.Student, BirthDate = DateTime.ParseExact("04/05/2009", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Norris", LastName = "Leroy", Email = "Nullam.feugiat.placerat@Nam.net", Role=Role.Student,BirthDate = DateTime.ParseExact("21/05/2015", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Gentry", LastName = "Hakeem", Email = "commodo.at.libero@conubia.com",Role=Role.Student, BirthDate = DateTime.ParseExact("29/10/2006", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Shannon", LastName = "Rashad", Email = "Mauris.ut@Integeraliquamadipiscing.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("30/09/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Chaney", LastName = "Hyatt", Email = "ut@arcuNuncmauris.net", Role=Role.Student,BirthDate = DateTime.ParseExact("03/11/2017", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Boyd", LastName = "Martin", Email = "eget.nisi.dictum@feugiat.ca",Role=Role.Student, BirthDate = DateTime.ParseExact("19/05/2014", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Daniel", LastName = "Hillary", Email = "arcu.ac@DonectinciduntDonec.com",Role=Role.Student, BirthDate = DateTime.ParseExact("20/11/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Graves", LastName = "Patience", Email = "Nullam.vitae@tincidunt.edu",Role=Role.Student, BirthDate = DateTime.ParseExact("02/09/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Villarreal", LastName = "Colleen", Email = "lectus@dolor.co.uk", Role=Role.Student,BirthDate = DateTime.ParseExact("29/10/2017", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Chambers", LastName = "Kamal", Email = "Cras.vehicula.aliquet@egestasAliquamnec.org",Role=Role.Student, BirthDate = DateTime.ParseExact("15/11/2014", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Whitehead", LastName = "Evan", Email = "ante@Suspendisse.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("04/08/2010", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Wynn", LastName = "Jessica", Email = "lectus.rutrum@euismodet.org", Role=Role.Student,BirthDate = DateTime.ParseExact("07/08/2000", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Franks", LastName = "Leandra", Email = "nec.orci@consequatauctornunc.ca",Role=Role.Student, BirthDate = DateTime.ParseExact("27/09/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Ellis", LastName = "Tallulah", Email = "bibendum@metus.com",Role=Role.Student, BirthDate = DateTime.ParseExact("10/07/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Williamson", LastName = "Jillian", Email = "pede.Suspendisse@cubilia.org",Role=Role.Student, BirthDate = DateTime.ParseExact("06/06/2001", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Bass", LastName = "Gray", Email = "sit.amet.orci@Donec.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("04/08/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Huber", LastName = "Dahlia", Email = "quam@in.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("30/09/2000", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Burgess", LastName = "Kermit", Email = "lobortis.quam@rutrum.net", Role=Role.Student,BirthDate = DateTime.ParseExact("06/04/2016", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Cherry", LastName = "Howard", Email = "mus.Donec@Donec.org", Role=Role.Student,BirthDate = DateTime.ParseExact("12/05/2001", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "James", LastName = "Beverly", Email = "ligula.tortor@laciniamattis.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("10/08/2003", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Little", LastName = "Rama", Email = "Donec.feugiat@montes.net", Role=Role.Student,BirthDate = DateTime.ParseExact("10/03/2001", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Washington", LastName = "Gay", Email = "Phasellus.dolor.elit@nislMaecenasmalesuada.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("28/11/2009", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Ortiz", LastName = "Teagan", Email = "ultricies.sem.magna@Morbinonsapien.com",Role=Role.Student, BirthDate = DateTime.ParseExact("16/12/2013", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Sellers", LastName = "Chava", Email = "id.enim@non.com",Role=Role.Student, BirthDate = DateTime.ParseExact("26/02/2013", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Solis", LastName = "Rhona", Email = "ante@magna.net",Role=Role.Student, BirthDate = DateTime.ParseExact("04/06/2015", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Dunlap", LastName = "Erin", Email = "pede.Praesent.eu@fermentumrisus.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("27/10/2008", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Salazar", LastName = "Jessica", Email = "lorem@atiaculis.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("08/09/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Ashley", LastName = "Maia", Email = "ac@ametorciUt.com", Role=Role.Student,BirthDate = DateTime.ParseExact("13/05/2011", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Dorsey", LastName = "Alfonso", Email = "euismod.mauris@sapienCras.org",Role=Role.Student, BirthDate = DateTime.ParseExact("08/02/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mcclain", LastName = "Nasim", Email = "euismod.et@egestasFusce.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("17/10/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Meadows", LastName = "Nasim", Email = "Sed.diam.lorem@risusDonecegestas.ca", Role=Role.Student,BirthDate = DateTime.ParseExact("03/12/2006", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Key", LastName = "Donovan", Email = "lorem.ipsum@blanditmattis.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("06/02/2002", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Salas", LastName = "Myra", Email = "et.malesuada.fames@tempus.org",Role=Role.Student, BirthDate = DateTime.ParseExact("07/10/2006", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Perkins", LastName = "Indira", Email = "non.cursus@enimnectempus.net", Role=Role.Student,BirthDate = DateTime.ParseExact("22/07/2015", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Harvey", LastName = "Aphrodite", Email = "egestas.Aliquam@hendrerit.ca",Role=Role.Student, BirthDate = DateTime.ParseExact("29/11/2015", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Pollard", LastName = "Cora", Email = "Proin.nisl.sem@Nullam.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("06/08/2017", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Wells", LastName = "Harlan", Email = "quis.accumsan.convallis@in.com", Role=Role.Student,BirthDate = DateTime.ParseExact("28/03/2012", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Dodson", LastName = "Emma", Email = "interdum@mifringillami.net",Role=Role.Student, BirthDate = DateTime.ParseExact("07/08/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Larsen", LastName = "Keiko", Email = "accumsan@mi.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("04/11/2004", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Salinas", LastName = "Adam", Email = "eleifend.egestas.Sed@Aliquam.net", Role=Role.Student,BirthDate = DateTime.ParseExact("10/06/2019", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Thompson", LastName = "Marcia", Email = "Donec@scelerisqueloremipsum.net",Role=Role.Student, BirthDate = DateTime.ParseExact("30/01/2000", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Sanchez", LastName = "James", Email = "Quisque@primis.co.uk", Role=Role.Student,BirthDate = DateTime.ParseExact("02/11/2008", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Robinson", LastName = "Zephania", Email = "convallis@vel.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("20/07/2016", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mayer", LastName = "Melvin", Email = "tempor.augue.ac@eratsemper.com",Role=Role.Student, BirthDate = DateTime.ParseExact("15/07/2014", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mason", LastName = "Jeremy", Email = "laoreet.libero@commodohendrerit.ca",Role=Role.Student, BirthDate = DateTime.ParseExact("13/03/2008", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Sanchez", LastName = "Jerry", Email = "Integer.sem@Nunc.com", Role=Role.Student,BirthDate = DateTime.ParseExact("11/12/2006", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Donaldson", LastName = "Vielka", Email = "sapien.gravida.non@ornarefacilisis.net",Role=Role.Student, BirthDate = DateTime.ParseExact("10/04/2005", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Stanton", LastName = "Michael", Email = "ac.facilisis@facilisisegetipsum.org",Role=Role.Student, BirthDate = DateTime.ParseExact("23/07/2009", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Frank", LastName = "Quamar", Email = "sociis@Ut.net", Role=Role.Student,BirthDate = DateTime.ParseExact("09/11/2015", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mack", LastName = "Dustin", Email = "mattis.Integer.eu@Morbi.edu",Role=Role.Student, BirthDate = DateTime.ParseExact("06/02/2000", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Craig", LastName = "Hunter", Email = "est.Nunc@sempercursusInteger.net",Role=Role.Student, BirthDate = DateTime.ParseExact("16/08/2009", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Burks", LastName = "Grady", Email = "pede.sagittis.augue@arcuetpede.org",Role=Role.Student, BirthDate = DateTime.ParseExact("28/10/2007", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Mckinney", LastName = "Violet", Email = "mollis.Duis@ligulaAliquam.org",Role=Role.Student, BirthDate = DateTime.ParseExact("30/04/2008", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Jensen", LastName = "Erin", Email = "Curabitur@Suspendisse.co.uk",Role=Role.Student, BirthDate = DateTime.ParseExact("26/05/2009", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Burch", LastName = "Abel", Email = "libero@egestas.edu", Role=Role.Student,BirthDate = DateTime.ParseExact("27/05/2012", "dd/MM/yyyy", CultureInfo.InvariantCulture) },
                new() { FirstName = "Martin", LastName = "Tintin", Email ="Martin@nicpaillegmail.onmicrosoft.com", AzureID = new Guid("1bd8def6-7654-4d71-9dc7-250109818a6b"), Role=Role.Student,BirthDate = DateTime.ParseExact("11/04/2016", "dd/MM/yyyy", CultureInfo.InvariantCulture)},
                new() { FirstName = "Casimir", LastName = "Monstre-Gentil", Email ="Casimir_Monstre-Gentil@nicpaillegmail.onmicrosoft.com",Role=Role.Student, AzureID = new Guid("08584E66-0B5C-43A9-A9DE-754C11731229"), BirthDate = DateTime.ParseExact("11/04/2016", "dd/MM/yyyy", CultureInfo.InvariantCulture) }
            };
            #endregion
            #region SUBJECTS
            Array subjectMatters = Enum.GetValues(typeof(SubjectMatter));


            #endregion

            #region TEACHERS
            List<Teacher> teachers = new List<Teacher>()
            {
                new() { FirstName = "Michel", LastName = "Paul_Nareff", Email = "Michel_Paul_Nareff@nicpaillegmail.onmicrosoft.com", Role=Role.Teacher,BirthDate = DateTime.ParseExact("09/26/1987", "MM/dd/yyyy", CultureInfo.InvariantCulture),AzureID=new Guid("3461d294-cdbf-430a-8281-a56e80d00b71"),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Camilla", LastName = "Walsh", Email = "Donec@sit.co.uk", Role=Role.Teacher,BirthDate = DateTime.ParseExact("10/21/1981", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Stuart", LastName = "Bush", Email = "lorem@metusAeneansed.net",Role=Role.Teacher, BirthDate = DateTime.ParseExact("05/05/1972", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Rowan", LastName = "Obrien", Email = "dapibus@porttitorinterdum.net",Role=Role.Teacher, BirthDate = DateTime.ParseExact("11/28/1981", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))), context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Edward", LastName = "Chambers", Email = "fringilla@purus.org", Role=Role.Teacher,BirthDate = DateTime.ParseExact("02/03/1988", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Jada", LastName = "Terrell", Email = "sagittis.Nullam.vitae@auguescelerisquemollis.com",Role=Role.Teacher, BirthDate = DateTime.ParseExact("10/29/1980", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Mohammad", LastName = "Mclaughlin", Email = "vitae.mauris@accumsan.com",Role=Role.Teacher, BirthDate = DateTime.ParseExact("03/07/1982", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Guy", LastName = "Fields", Email = "orci.lacus.vestibulum@fermentum.ca",Role=Role.Teacher, BirthDate = DateTime.ParseExact("05/16/1993", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Rogan", LastName = "Dixon", Email = "Lorem@vestibulummassa.edu",Role=Role.Teacher, BirthDate = DateTime.ParseExact("03/01/1982", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Hayfa", LastName = "Rice", Email = "porttitor.eros.nec@Sedpharetra.net",Role=Role.Teacher, BirthDate = DateTime.ParseExact("06/24/1990", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Lance", LastName = "Mcclure", Email = "mi@Curabitur.co.uk", Role=Role.Teacher,BirthDate = DateTime.ParseExact("12/31/1985", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Preston", LastName = "Aguilar", Email = "nascetur.ridiculus.mus@libero.org", Role=Role.Teacher,BirthDate = DateTime.ParseExact("06/04/1984", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Laith", LastName = "Simpson", Email = "Suspendisse.sagittis.Nullam@nonenimcommodo.org",Role=Role.Teacher, BirthDate = DateTime.ParseExact("10/10/1993", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))), context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Wayne", LastName = "Rios", Email = "eu@convallis.org",Role=Role.Teacher, BirthDate = DateTime.ParseExact("04/16/1974", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Nicholas", LastName = "Cantu", Email = "scelerisque.neque@diam.net",Role=Role.Teacher, BirthDate = DateTime.ParseExact("09/17/1990", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Gray", LastName = "Frost", Email = "bibendum@orci.edu", Role=Role.Teacher,BirthDate = DateTime.ParseExact("02/23/1992", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Clementine", LastName = "Franklin", Email = "eleifend@auctorullamcorper.org", Role=Role.Teacher,BirthDate = DateTime.ParseExact("11/27/1982", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Kieran", LastName = "Harvey", Email = "condimentum.eget.volutpat@dui.org", Role=Role.Teacher,BirthDate = DateTime.ParseExact("10/03/1994", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Meredith", LastName = "Kinney", Email = "Aenean.massa.Integer@sed.ca", Role=Role.Teacher,BirthDate = DateTime.ParseExact("11/11/1995", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                new() { FirstName = "Victor", LastName = "Parsons", Email = "Mauris.ut@consequat.com",Role=Role.Teacher, BirthDate = DateTime.ParseExact("10/27/1974", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Ferris", LastName = "Davenport", Email = "semper.dui@ligulaconsectetuer.edu", BirthDate = DateTime.ParseExact("02/12/1975", "MM/dd/yyyy", CultureInfo.InvariantCulture) ,Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) }},
                //new() { FirstName = "Galena", LastName = "Mccarty", Email = "Lorem.ipsum@enimgravida.edu", BirthDate = DateTime.ParseExact("10/30/1985", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Karly", LastName = "Beck", Email = "sed.leo@natoquepenatibuset.ca", BirthDate = DateTime.ParseExact("11/30/1985", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Damon", LastName = "Hicks", Email = "lacus.vestibulum@elitAliquamauctor.ca", BirthDate = DateTime.ParseExact("01/09/1989", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Samantha", LastName = "Gilliam", Email = "nec.enim@Integerurna.com", BirthDate = DateTime.ParseExact("12/23/1995", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Xanthus", LastName = "Michael", Email = "ante.bibendum.ullamcorper@duiquisaccumsan.net", BirthDate = DateTime.ParseExact("03/15/1993", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Brody", LastName = "Robbins", Email = "interdum@miAliquamgravida.edu", BirthDate = DateTime.ParseExact("06/25/1989", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))), context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Michael", LastName = "Flynn", Email = "nec.eleifend.non@gravida.com", BirthDate = DateTime.ParseExact("04/01/1992", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Hadassah", LastName = "Jimenez", Email = "ac.arcu@elitelitfermentum.ca", BirthDate = DateTime.ParseExact("07/23/1992", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Kylee", LastName = "Pruitt", Email = "torquent.per.conubia@id.edu", BirthDate = DateTime.ParseExact("08/13/1986", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Emi", LastName = "Mcclain", Email = "Integer@seddui.co.uk", BirthDate = DateTime.ParseExact("10/13/1989", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))), context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) }},
                //new() { FirstName = "Hector", LastName = "Mendoza", Email = "cubilia@quispede.edu", BirthDate = DateTime.ParseExact("05/05/1990", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Charissa", LastName = "Murray", Email = "primis.in@rutrumeu.ca", BirthDate = DateTime.ParseExact("12/19/1970", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Dara", LastName = "Ramos", Email = "sit.amet@eudui.org", BirthDate = DateTime.ParseExact("05/19/1973", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Kennan", LastName = "Castaneda", Email = "orci.Phasellus.dapibus@pharetra.co.uk", BirthDate = DateTime.ParseExact("01/11/1989", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Arden", LastName = "Eaton", Email = "commodo.at.libero@Integer.co.uk", BirthDate = DateTime.ParseExact("05/02/1973", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Desiree", LastName = "Gray", Email = "nec.luctus@Inornaresagittis.co.uk", BirthDate = DateTime.ParseExact("09/20/1988", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))), context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Madeson", LastName = "Gilbert", Email = "dolor.elit@Nullatemporaugue.ca", BirthDate = DateTime.ParseExact("02/17/1996", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Fredericka", LastName = "Hamilton", Email = "quis.accumsan@egestashendrerit.net", BirthDate = DateTime.ParseExact("02/20/1990", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Clare", LastName = "Morgan", Email = "nulla.In.tincidunt@pellentesqueafacilisis.ca", BirthDate = DateTime.ParseExact("07/27/1988", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Cherokee", LastName = "Christian", Email = "Quisque@FuscefeugiatLorem.co.uk", BirthDate = DateTime.ParseExact("09/30/1977", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Geoffrey", LastName = "Skinner", Email = "odio@tellus.ca", BirthDate = DateTime.ParseExact("06/18/1970", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Lois", LastName = "Sears", Email = "Proin.eget.odio@inlobortistellus.co.uk", BirthDate = DateTime.ParseExact("12/30/1989", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))), context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Jerry", LastName = "Nixon", Email = "augue@gravidanon.net", BirthDate = DateTime.ParseExact("03/06/1990", "MM/dd/yyyy", CultureInfo.InvariantCulture) ,Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) }},
                //new() { FirstName = "Philip", LastName = "Blackburn", Email = "velit.Sed@elitEtiam.net", BirthDate = DateTime.ParseExact("09/14/1988", "MM/dd/yyyy", CultureInfo.InvariantCulture) ,Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) }},
                //new() { FirstName = "Fuller", LastName = "Colon", Email = "ultricies@Nullasempertellus.co.uk", BirthDate = DateTime.ParseExact("04/21/1970", "MM/dd/yyyy", CultureInfo.InvariantCulture) ,Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) }},
                //new() { FirstName = "Meghan", LastName = "Keller", Email = "eget.laoreet@Uttinciduntorci.com", BirthDate = DateTime.ParseExact("11/04/1989", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Zachary", LastName = "Velazquez", Email = "Mauris.ut.quam@Nunc.net", BirthDate = DateTime.ParseExact("01/30/1984", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Brady", LastName = "Workman", Email = "non.lobortis@eu.edu", BirthDate = DateTime.ParseExact("02/27/1984", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Austin", LastName = "Kline", Email = "montes.nascetur@Nullaaliquet.net", BirthDate = DateTime.ParseExact("10/25/1981", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Athena", LastName = "Weiss", Email = "vulputate.dui.nec@odioauctor.co.uk", BirthDate = DateTime.ParseExact("04/15/1980", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Griffith", LastName = "Navarro", Email = "lorem.fringilla@velit.org", BirthDate = DateTime.ParseExact("06/09/1971", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Maile", LastName = "Garza", Email = "malesuada.fames.ac@convallisconvallis.edu", BirthDate = DateTime.ParseExact("04/03/1976", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Zeus", LastName = "Peterson", Email = "rutrum.Fusce.dolor@Cras.org", BirthDate = DateTime.ParseExact("09/16/1979", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Ashton", LastName = "Delaney", Email = "Nulla.tincidunt.neque@sedduiFusce.edu", BirthDate = DateTime.ParseExact("02/05/1983", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Camilla", LastName = "Murray", Email = "Mauris.vestibulum@nuncsitamet.org", BirthDate = DateTime.ParseExact("08/06/1972", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Cassandra", LastName = "Albert", Email = "fermentum.arcu.Vestibulum@ultriciesligulaNullam.org", BirthDate = DateTime.ParseExact("01/21/1970", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) , context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Hammett", LastName = "Herrera", Email = "odio.semper@facilisis.com", BirthDate = DateTime.ParseExact("05/28/1988", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Rudyard", LastName = "Strong", Email = "et@turpisegestas.ca", BirthDate = DateTime.ParseExact("02/19/1991", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Justin", LastName = "Beard", Email = "cursus@anteipsum.edu", BirthDate = DateTime.ParseExact("09/17/1995", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Dana", LastName = "Austin", Email = "consectetuer.adipiscing@arcu.com", BirthDate = DateTime.ParseExact("05/14/1985", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Coby", LastName = "Pena", Email = "dolor@augueacipsum.co.uk", BirthDate = DateTime.ParseExact("06/15/1979", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Penelope", LastName = "Bender", Email = "montes.nascetur@enimcommodohendrerit.ca", BirthDate = DateTime.ParseExact("06/13/1992", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Ezekiel", LastName = "Yates", Email = "Pellentesque@semvitaealiquam.com", BirthDate = DateTime.ParseExact("11/21/1981", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Charity", LastName = "Ayers", Email = "tempus.scelerisque@aliquetmagnaa.co.uk", BirthDate = DateTime.ParseExact("07/14/1993", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Cooper", LastName = "Gallegos", Email = "cursus@odio.com", BirthDate = DateTime.ParseExact("04/27/1996", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Kirk", LastName = "Blackwell", Email = "eget.volutpat.ornare@Vestibulumanteipsum.net", BirthDate = DateTime.ParseExact("06/24/1978", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Yvonne", LastName = "Cook", Email = "Duis.a.mi@vehiculaaliquetlibero.org", BirthDate = DateTime.ParseExact("01/29/1987", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Quincy", LastName = "Dalton", Email = "arcu@Proinsedturpis.edu", BirthDate = DateTime.ParseExact("11/25/1977", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Xyla", LastName = "Randolph", Email = "Donec.egestas@auctorMaurisvel.edu", BirthDate = DateTime.ParseExact("10/11/1996", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Wade", LastName = "Rogers", Email = "sit.amet.risus@adipiscingligulaAenean.com", BirthDate = DateTime.ParseExact("07/02/1971", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Cullen", LastName = "Kelley", Email = "Aenean.sed.pede@Quisquetincidunt.com", BirthDate = DateTime.ParseExact("06/28/1985", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Owen", LastName = "Moss", Email = "Etiam.vestibulum@nonummyut.com", BirthDate = DateTime.ParseExact("05/03/1972", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Silas", LastName = "Orr", Email = "nec.ligula@non.org", BirthDate = DateTime.ParseExact("12/07/1995", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } },
                //new() { FirstName = "Willow", LastName = "Curry", Email = "dui@vitae.ca", BirthDate = DateTime.ParseExact("06/11/1985", "MM/dd/yyyy", CultureInfo.InvariantCulture),Subjects = new List<Subject>(){ context.Subjects.Find(subjectMatters.GetValue(rand.Next(subjectMatters.Length))) } }
            };
            #endregion
            #region CLASSROOM
            List<Classroom> classrooms = new List<Classroom>()
            {
                new Classroom(){ Name = "A120" },
                new Classroom(){ Name = "A121" },
                new Classroom(){ Name = "A122" },
                new Classroom(){ Name = "B110" },
                new Classroom(){ Name = "B111" },
                new Classroom(){ Name = "B112" },
                new Classroom(){ Name = "C101" },
                new Classroom(){ Name = "C201" },
                new Classroom(){ Name = "C301" },
            };
            #endregion
            context.Students.AddRange(students);
            context.Teachers.AddRange(teachers);
            context.Classrooms.AddRange(classrooms);
            context.SaveChanges();

            #region GROUPS
            var gpTeachers = context.Teachers.ToList();
            var gpStudents = context.Students.ToList();
            var gpStudents1 = gpStudents.Take(15).ToList();
            var gpStudents2 = gpStudents.Skip(15).Take(25).ToList();
            var gpStudents3 = gpStudents.Skip(40).Take(35).ToList();
            var gpStudents4 = gpStudents.Skip(75).Take(27).ToList();


            List<Group> groups = new List<Group>()
            {
                new (){ Students = gpStudents1, HomeRoomTeacher = teachers.ElementAt(rand.Next(teachers.Count()))},
                new (){ Students = gpStudents2, HomeRoomTeacher = teachers.ElementAt(rand.Next(teachers.Count()))},
                new (){ Students = gpStudents3, HomeRoomTeacher = teachers.ElementAt(rand.Next(teachers.Count()))},
                new (){ Students = gpStudents4, HomeRoomTeacher = teachers.ElementAt(rand.Next(teachers.Count()))},
            };
            #endregion

            #region COURSES

            List<Course> courses = new List<Course>()
            {
                new() { Date = DateTime.ParseExact("11/17/2022 15:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/02/2022 20:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/19/2023 22:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/01/2022 03:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/18/2023 11:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("05/15/2023 16:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/12/2023 15:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/17/2023 08:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/30/2022 16:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/22/2023 04:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/02/2023 11:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/13/2023 17:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/02/2022 18:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/10/2023 08:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/26/2022 00:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/02/2022 00:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/29/2023 18:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/27/2023 15:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/23/2022 18:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/08/2022 22:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/10/2022 01:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/05/2023 01:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/22/2023 09:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/17/2022 23:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/29/2022 04:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/11/2023 15:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/04/2023 23:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/30/2023 03:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/27/2022 02:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/09/2023 03:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/09/2023 05:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/13/2023 09:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/05/2022 08:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/19/2023 05:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/10/2022 11:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/02/2023 00:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/17/2023 18:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/02/2022 13:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/04/2023 13:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("05/02/2023 16:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/19/2023 11:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/09/2023 19:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/12/2023 15:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/27/2023 13:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/04/2023 17:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/06/2023 19:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/09/2023 10:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/14/2023 15:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/13/2023 18:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/09/2022 07:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/18/2022 23:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("05/04/2023 20:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/18/2022 10:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/23/2023 17:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/15/2022 21:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/24/2023 22:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/28/2022 02:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/05/2022 16:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/27/2023 18:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/24/2022 07:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/11/2022 17:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/17/2023 06:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/19/2023 20:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/05/2023 11:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/03/2023 23:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/04/2022 20:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/07/2023 00:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/24/2023 06:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/08/2022 20:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/16/2023 20:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/23/2023 05:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/02/2022 11:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/09/2023 16:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/02/2022 17:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("05/24/2023 13:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/28/2022 15:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/01/2022 02:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/28/2022 04:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/29/2023 12:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/15/2022 00:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/20/2022 08:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/27/2023 09:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/06/2022 03:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/22/2023 17:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/06/2023 13:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/23/2022 22:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/09/2022 15:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/22/2023 09:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/20/2022 03:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("05/03/2023 07:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/01/2022 20:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/08/2023 05:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/15/2023 13:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("04/27/2023 19:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/17/2022 20:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/03/2023 21:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/19/2023 11:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/20/2022 08:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/21/2023 22:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/31/2023 06:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("03/30/2023 18:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/17/2022 06:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/28/2022 07:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/12/2023 13:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("09/11/2022 12:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/18/2023 22:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("02/21/2023 04:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/31/2023 22:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("10/26/2022 02:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("07/21/2023 03:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("11/27/2022 12:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("12/12/2022 13:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("01/13/2023 08:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("05/27/2023 16:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                new() { Date = DateTime.ParseExact("06/30/2023 21:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectID = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("03/30/2023 10:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/09/2022 10:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/27/2023 07:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/20/2022 22:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/01/2023 10:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("01/11/2023 03:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/18/2022 18:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("12/03/2022 00:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("10/03/2022 19:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/23/2022 04:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/25/2023 05:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("03/24/2023 16:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/16/2023 13:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/21/2023 08:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/21/2023 05:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("10/11/2022 17:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/11/2023 23:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/18/2023 10:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("07/01/2023 00:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/12/2022 08:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("12/16/2022 22:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("12/19/2022 11:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("12/21/2022 00:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("07/01/2023 04:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/02/2022 05:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/28/2023 04:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/09/2022 12:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/02/2023 03:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/04/2022 04:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("08/01/2023 23:08", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/07/2023 16:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/24/2022 23:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("12/08/2022 22:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/06/2022 17:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("01/14/2023 01:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/23/2022 01:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/04/2023 08:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/09/2023 05:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/18/2023 13:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/01/2022 16:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("07/17/2023 15:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("10/28/2022 00:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("03/14/2023 12:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/24/2022 17:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("01/05/2023 09:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/29/2023 04:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/09/2022 23:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/02/2023 22:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("10/20/2022 01:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/10/2023 20:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("03/09/2023 00:03", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("07/15/2023 09:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/02/2023 14:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/02/2022 08:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("01/03/2023 09:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/06/2023 02:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/19/2022 08:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/24/2023 13:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/14/2023 13:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/07/2023 13:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/03/2023 16:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/14/2023 04:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/02/2023 09:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("07/08/2023 13:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("09/14/2022 23:09", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/25/2023 16:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/08/2023 09:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("10/23/2022 03:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/23/2023 14:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/15/2023 18:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/22/2023 01:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("02/09/2023 11:02", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/11/2023 19:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("01/29/2023 09:01", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("12/13/2022 14:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("07/19/2023 02:07", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("10/15/2022 02:10", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("12/26/2022 04:12", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/23/2022 07:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("04/30/2023 10:04", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("11/27/2022 15:11", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/29/2023 19:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/07/2023 23:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("05/03/2023 14:05", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } },
                //new() { Date = DateTime.ParseExact("06/20/2023 12:06", "MM/dd/yyyy HH:mm", CultureInfo.InvariantCulture),Teacher = teachers.ElementAt(rand.Next(teachers.Count())),Classroom = classrooms.ElementAt(rand.Next(classrooms.Count())), SubjectId = (SubjectMatter)subjectMatters.GetValue(rand.Next(subjectMatters.Length)), Groups = new List<Group>(){groups.ElementAt(rand.Next(groups.Count())) } }
            };
            #endregion

            #region GRADES
            List<Grade> grades = new List<Grade>()
            {
                /*new { Assessment = "ullamcorper, nisl arcu", Value = "5.1430383328648" },
				new { Assessment = "ut quam vel", Value = "8.075086608808" },
				new { Assessment = "eu, placerat eget,", Value = "5.3974009482783" },
				new { Assessment = "Nunc lectus pede,", Value = "12.323249158892" },
				new { Assessment = "nisi nibh lacinia", Value = "13.236245644358" },
				new { Assessment = "nunc risus varius", Value = "5.3203417777564" },
				new { Assessment = "ac arcu. Nunc", Value = "8.9717945120955" },
				new { Assessment = "varius ultrices, mauris", Value = "13.170343117699" },
				new { Assessment = "eu, ligula. Aenean", Value = "11.436069795949" },
				new { Assessment = "pede sagittis augue,", Value = "6.8827138435873" },
				new { Assessment = "Quisque purus sapien,", Value = "8.051467763585" },
				new { Assessment = "egestas a, scelerisque", Value = "11.454688946256" },
				new { Assessment = "elementum, dui quis", Value = "13.471689626929" },
				new { Assessment = "Quisque tincidunt pede", Value = "8.1197950666626" },
				new { Assessment = "congue a, aliquet", Value = "11.305722796738" },
				new { Assessment = "augue eu tellus.", Value = "14.684948994406" },
				new { Assessment = "ultrices iaculis odio.", Value = "9.2009804030413" },
				new { Assessment = "feugiat non, lobortis", Value = "4.9294259732482" },
				new { Assessment = "sit amet diam", Value = "9.0717892433861" },
				new { Assessment = "lacus. Quisque purus", Value = "13.99808443348" },
				new { Assessment = "orci sem eget", Value = "12.146466736305" },
				new { Assessment = "In faucibus. Morbi", Value = "12.405071780635" },
				new { Assessment = "ullamcorper, nisl arcu", Value = "9.2543861134978" },
				new { Assessment = "fringilla. Donec feugiat", Value = "13.580827630151" },
				new { Assessment = "eu, placerat eget,", Value = "13.917528747448" },
				new { Assessment = "neque pellentesque massa", Value = "16.870781958112" },
				new { Assessment = "libero. Proin mi.", Value = "8.9024706802998" },
				new { Assessment = "mauris sagittis placerat.", Value = "8.4106160339959" },
				new { Assessment = "lobortis ultrices. Vivamus", Value = "10.067489030637" },
				new { Assessment = "aliquam adipiscing lacus.", Value = "10.737722359732" },
				new { Assessment = "vel est tempor", Value = "10.507515809792" },
				new { Assessment = "eget, venenatis a,", Value = "6.1807248088333" },
				new { Assessment = "augue ut lacus.", Value = "8.8167757046604" },
				new { Assessment = "aliquet, sem ut", Value = "19.158241681941" },
				new { Assessment = "in lobortis tellus", Value = "6.7111725214829" },
				new { Assessment = "et arcu imperdiet", Value = "14.721286290448" },
				new { Assessment = "dolor dapibus gravida.", Value = "11.53049661344" },
				new { Assessment = "id, mollis nec,", Value = "15.351041865408" },
				new { Assessment = "lacus. Nulla tincidunt,", Value = "6.4166607647357" },
				new { Assessment = "Mauris molestie pharetra", Value = "15.64191428398" },
				new { Assessment = "hendrerit a, arcu.", Value = "8.6767588004554" },
				new { Assessment = "sem magna nec", Value = "14.100992713537" },
				new { Assessment = "velit eget laoreet", Value = "9.4725523434614" },
				new { Assessment = "Quisque libero lacus,", Value = "10.052940509942" },
				new { Assessment = "Phasellus nulla. Integer", Value = "9.3277711083263" },
				new { Assessment = "Etiam laoreet, libero", Value = "10.764065455955" },
				new { Assessment = "lacinia vitae, sodales", Value = "13.807563075584" },
				new { Assessment = "nunc interdum feugiat.", Value = "8.9297425432134" },
				new { Assessment = "Mauris vel turpis.", Value = "13.219202263293" },
				new { Assessment = "habitant morbi tristique", Value = "9.2208714631744" },
				new { Assessment = "ac tellus. Suspendisse", Value = "10.398113916078" },
				new { Assessment = "urna. Nunc quis", Value = "13.526771673011" },
				new { Assessment = "enim, gravida sit", Value = "10.988443775905" },
				new { Assessment = "nascetur ridiculus mus.", Value = "6.9456298833713" },
				new { Assessment = "eget laoreet posuere,", Value = "-2.2635073352779" },
				new { Assessment = "Phasellus in felis.", Value = "16.037694064114" },
				new { Assessment = "ac urna. Ut", Value = "14.04502403845" },
				new { Assessment = "in felis. Nulla", Value = "10.406365994264" },
				new { Assessment = "amet lorem semper", Value = "11.548400203008" },
				new { Assessment = "feugiat. Sed nec", Value = "5.3313850335859" },
				new { Assessment = "hymenaeos. Mauris ut", Value = "9.6343174845309" },
				new { Assessment = "mus. Proin vel", Value = "12.076674207155" },
				new { Assessment = "Sed id risus", Value = "12.477302413421" },
				new { Assessment = "nec ante. Maecenas", Value = "16.333283002405" },
				new { Assessment = "in lobortis tellus", Value = "13.690962091956" },
				new { Assessment = "consectetuer rhoncus. Nullam", Value = "13.367485434276" },
				new { Assessment = "orci, adipiscing non,", Value = "7.0738543691155" },
				new { Assessment = "faucibus orci luctus", Value = "9.7722061901446" },
				new { Assessment = "Donec elementum, lorem", Value = "6.6118197911292" },
				new { Assessment = "hendrerit id, ante.", Value = "15.512048202225" },
				new { Assessment = "dis parturient montes,", Value = "5.0670723446737" },
				new { Assessment = "mauris eu elit.", Value = "11.171814170927" },
				new { Assessment = "aliquet magna a", Value = "11.492996297839" },
				new { Assessment = "iaculis nec, eleifend", Value = "8.2253569991081" },
				new { Assessment = "Donec egestas. Duis", Value = "8.5368698490704" },
				new { Assessment = "nulla. Cras eu", Value = "16.587178692933" },
				new { Assessment = "et risus. Quisque", Value = "6.4168789603446" },
				new { Assessment = "pharetra. Quisque ac", Value = "5.5348802908438" },
				new { Assessment = "sit amet ornare", Value = "9.4542395700696" },
				new { Assessment = "tellus eu augue", Value = "8.6524434824191" },
				new { Assessment = "Morbi sit amet", Value = "10.127906847664" },
				new { Assessment = "sodales elit erat", Value = "5.7914559707939" },
				new { Assessment = "est ac facilisis", Value = "11.476385206074" },
				new { Assessment = "elit erat vitae", Value = "13.11994240513" },
				new { Assessment = "ac risus. Morbi", Value = "6.4247406584969" },
				new { Assessment = "Donec est mauris,", Value = "15.322394892442" },
				new { Assessment = "sit amet luctus", Value = "10.671746546745" },
				new { Assessment = "Aenean sed pede", Value = "8.522348674614" },
				new { Assessment = "velit justo nec", Value = "-4.6628247498356" },
				new { Assessment = "id, erat. Etiam", Value = "7.4751721490344" },
				new { Assessment = "enim. Nunc ut", Value = "9.1563450780969" },
				new { Assessment = "vehicula risus. Nulla", Value = "6.3668667226055" },
				new { Assessment = "eu, eleifend nec,", Value = "1.339900646373" },
				new { Assessment = "Donec non justo.", Value = "17.762699541719" },
				new { Assessment = "semper erat, in", Value = "7.2564638390998" },
				new { Assessment = "eu nulla at", Value = "11.44067989617" },
				new { Assessment = "semper auctor. Mauris", Value = "7.7501989951086" },
				new { Assessment = "sapien. Aenean massa.", Value = "10.864086352375" },
				new { Assessment = "non, hendrerit id,", Value = "7.5232093664641" },
				new { Assessment = "fermentum convallis ligula.", Value = "14.219552566814" },
				new { Assessment = "orci luctus et", Value = "10.328098844805" },
				new { Assessment = "Duis gravida. Praesent", Value = "14.907698421572" },
				new { Assessment = "nisi. Cum sociis", Value = "13.290150946161" },
				new { Assessment = "magnis dis parturient", Value = "7.5086889160065" },
				new { Assessment = "Sed auctor odio", Value = "18.953403445146" },
				new { Assessment = "ultrices posuere cubilia", Value = "11.826379992008" },
				new { Assessment = "massa. Quisque porttitor", Value = "16.480165181949" },
				new { Assessment = "purus. Maecenas libero", Value = "8.9095333324787" },
				new { Assessment = "sed dolor. Fusce", Value = "14.363088226404" },
				new { Assessment = "feugiat metus sit", Value = "5.9610369486002" },
				new { Assessment = "non, cursus non,", Value = "12.3658669158" },
				new { Assessment = "mus. Aenean eget", Value = "18.289598708998" },
				new { Assessment = "Curabitur egestas nunc", Value = "5.7059206688889" },
				new { Assessment = "arcu eu odio", Value = "12.425327658732" },
				new { Assessment = "montes, nascetur ridiculus", Value = "14.006672018471" },
				new { Assessment = "Quisque ac libero", Value = "13.731491543632" },
				new { Assessment = "sagittis augue, eu", Value = "7.3635934761485" },
				new { Assessment = "scelerisque sed, sapien.", Value = "7.2220860727931" },
				new { Assessment = "interdum. Nunc sollicitudin", Value = "13.594500716926" },
				new { Assessment = "lobortis. Class aptent", Value = "11.141374842685" },
				new { Assessment = "id ante dictum", Value = "9.5956996616848" },
				new { Assessment = "nisi. Aenean eget", Value = "5.6729013321978" },
				new { Assessment = "pharetra sed, hendrerit", Value = "10.485812071105" },
				new { Assessment = "enim nisl elementum", Value = "6.4913197821145" },
				new { Assessment = "amet nulla. Donec", Value = "3.4974413676923" },
				new { Assessment = "amet orci. Ut", Value = "9.6025791904494" },
				new { Assessment = "Proin nisl sem,", Value = "8.2151463044352" },
				new { Assessment = "Aliquam tincidunt, nunc", Value = "12.109114819822" },
				new { Assessment = "adipiscing, enim mi", Value = "19.965202381563" },
				new { Assessment = "lacus pede sagittis", Value = "13.741723957824" },
				new { Assessment = "nibh sit amet", Value = "11.665757241967" },
				new { Assessment = "Donec dignissim magna", Value = "13.654618910575" },
				new { Assessment = "magna. Sed eu", Value = "0.79656524080029" },
				new { Assessment = "orci tincidunt adipiscing.", Value = "9.7069810941435" },
				new { Assessment = "ligula consectetuer rhoncus.", Value = "8.4585839164867" },
				new { Assessment = "parturient montes, nascetur", Value = "8.1257305477096" },
				new { Assessment = "purus sapien, gravida", Value = "9.8431824203456" },
				new { Assessment = "magna. Phasellus dolor", Value = "10.137507833249" },
				new { Assessment = "enim. Sed nulla", Value = "4.096281063094" },
				new { Assessment = "malesuada vel, venenatis", Value = "15.337183892418" },
				new { Assessment = "vestibulum, neque sed", Value = "9.8940142789329" },
				new { Assessment = "risus. Nulla eget", Value = "7.9464612930123" },
				new { Assessment = "elit, pellentesque a,", Value = "2.0080423314116" },
				new { Assessment = "sed dui. Fusce", Value = "12.71652529821" },
				new { Assessment = "convallis dolor. Quisque", Value = "0.98744071786878" },
				new { Assessment = "turpis nec mauris", Value = "8.7336751244246" },
				new { Assessment = "convallis erat, eget", Value = "10.955684829488" },
				new { Assessment = "ullamcorper, nisl arcu", Value = "4.9088963661378" },
				new { Assessment = "a sollicitudin orci", Value = "8.2054887758852" },
				new { Assessment = "mi. Duis risus", Value = "7.5905276599946" },
				new { Assessment = "rutrum urna, nec", Value = "10.734752196999" },
				new { Assessment = "Mauris vel turpis.", Value = "10.822031088867" },
				new { Assessment = "sed libero. Proin", Value = "-0.18573121486699" },
				new { Assessment = "elementum, dui quis", Value = "6.7543378732924" },
				new { Assessment = "lorem ac risus.", Value = "6.9898876692298" },
				new { Assessment = "augue. Sed molestie.", Value = "10.524353412245" },
				new { Assessment = "nisi dictum augue", Value = "15.427487152698" },
				new { Assessment = "sit amet ultricies", Value = "5.1976804316432" },
				new { Assessment = "est mauris, rhoncus", Value = "8.369387384917" },
				new { Assessment = "felis purus ac", Value = "10.611823001147" },
				new { Assessment = "arcu. Sed et", Value = "12.890815396944" },
				new { Assessment = "sed, hendrerit a,", Value = "8.9082548844425" },
				new { Assessment = "porttitor scelerisque neque.", Value = "13.212611155055" },
				new { Assessment = "elementum sem, vitae", Value = "14.298829813604" },
				new { Assessment = "vel sapien imperdiet", Value = "11.81923658314" },
				new { Assessment = "feugiat. Lorem ipsum", Value = "9.408854414958" },
				new { Assessment = "eros turpis non", Value = "2.8160418928118" },
				new { Assessment = "ligula eu enim.", Value = "12.373325163461" },
				new { Assessment = "vitae erat vel", Value = "6.8187203566155" },
				new { Assessment = "placerat, augue. Sed", Value = "8.3649717081222" },
				new { Assessment = "ut, nulla. Cras", Value = "13.844742652941" },
				new { Assessment = "ultrices iaculis odio.", Value = "8.1757559388557" },
				new { Assessment = "auctor velit. Aliquam", Value = "6.3109216067217" },
				new { Assessment = "Cras vulputate velit", Value = "8.3775182786421" },
				new { Assessment = "ante dictum mi,", Value = "8.3831784520378" },
				new { Assessment = "bibendum. Donec felis", Value = "12.053839961427" },
				new { Assessment = "non arcu. Vivamus", Value = "16.818125961162" },
				new { Assessment = "mauris erat eget", Value = "4.9620777530329" },
				new { Assessment = "risus odio, auctor", Value = "11.199120994264" },
				new { Assessment = "nascetur ridiculus mus.", Value = "9.8454968704943" },
				new { Assessment = "a feugiat tellus", Value = "9.473642224744" },
				new { Assessment = "Morbi non sapien", Value = "11.020811372534" },
				new { Assessment = "semper tellus id", Value = "6.565156293029" },
				new { Assessment = "ridiculus mus. Proin", Value = "15.999116657019" },
				new { Assessment = "erat. Vivamus nisi.", Value = "8.6786708339776" },
				new { Assessment = "augue porttitor interdum.", Value = "6.489850023427" },
				new { Assessment = "metus sit amet", Value = "9.1912884102732" },
				new { Assessment = "urna suscipit nonummy.", Value = "7.9211556630275" },
				new { Assessment = "enim diam vel", Value = "9.8048751532401" },
				new { Assessment = "porttitor eros nec", Value = "7.0394757590081" },
				new { Assessment = "pede, ultrices a,", Value = "13.240797952597" },
				new { Assessment = "fringilla est. Mauris", Value = "13.26367744547" },
				new { Assessment = "mauris blandit mattis.", Value = "14.181595122448" },
				new { Assessment = "dignissim lacus. Aliquam", Value = "7.5574347652559" },
				new { Assessment = "In nec orci.", Value = "13.7129439369" },
				new { Assessment = "a, enim. Suspendisse", Value = "11.112084610389" },
				new { Assessment = "in consequat enim", Value = "10.968164831649" },
				new { Assessment = "luctus, ipsum leo", Value = "14.757212898426" },
				new { Assessment = "Cras lorem lorem,", Value = "8.3436875121429" },
				new { Assessment = "Donec tempus, lorem", Value = "7.4903806101311" }*/
            };
            #endregion

            #region MISSING
            List<Missing> missings = new List<Missing>()
            {

            };
            #endregion

            context.Groups.AddRange(groups);
            context.Courses.AddRange(courses);
            context.Grades.AddRange(grades);
            context.Missings.AddRange(missings);
            context.Groups.AddRange(groups);
            context.SaveChanges();
        }
    }
}
