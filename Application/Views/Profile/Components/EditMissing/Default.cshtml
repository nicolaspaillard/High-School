@using Models
@model Course
@using Application.Controllers.Services
@inject RepositoryService<Student> _student

@inject RepositoryService<Teacher> _teachers
@inject RepositoryService<Subject> _subjects
@inject RepositoryService<Classroom> _classrooms
@inject RepositoryService<Group> _groups
@inject RepositoryService<Course> _courses
@{
    Model.Groups = (await _courses.GetAsync(Model.CourseID)).Groups;

}
<div class="row modal fade" id="edit-missing" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addContactLabel">Notifier les absences : </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="EditMissing">
                    <input type="hidden" name="IsValid" value="@ViewData.ModelState.IsValid.ToString()" />
                    <input type="hidden" asp-for="CourseID" />
                    <div class="form-group">
                        @foreach (var item in (Model.Groups))
                        {
                            List<SelectListItem> k = new();
                            @foreach (Student s in item.Students)
                            {
                                k.Add(new SelectListItem(String.Join(" ", s.FirstName, s.LastName), s.PersonID.ToString()));
                            }
                            @foreach (var o in k)
                            {
                                Model.Groups.ForEach(g => o.Selected = g.Students.Select(s => s.PersonID).Contains(int.Parse(o.Value)));
                                <label asp-for="@o.Text">@o.Text</label>
                                <input type="checkbox" name="StudentID" value="@o.Value" checked="@o.Selected" />
                            }

                        }
                        <span asp-validation-for="Groups" class="text-danger"></span>
                    </div>
                </form>
            </div>
            <div class="form-group modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                <button type="button" class="btn btn-primary" data-save="modal">Sauvegarder</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
