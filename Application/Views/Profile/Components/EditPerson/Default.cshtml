@using Models 
@model Person
@using Application.Controllers.Services
@inject RepositoryService<Group> groupService

<div class="row" id="edit-person">
    <div class="col-md-4">
        <form asp-action="Default">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BirthDate" class="control-label"></label>
                <input asp-for="BirthDate" class="form-control" />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
            @switch (Model.Role)
            {
                case Models.Role.Admin:
                    //create an admin ui
                    break;
                case Models.Role.Teacher:
                    //create a teacher ui
                    break;
                case Models.Role.Student:
                    //create a student ui
                    Student student = (Student)Model;
                    <div class="form-group">
                        <label asp-for="@student.GroupID" class="control-label"></label>
                        @{
                            List<SelectListItem> items = (await groupService.GetAllAsync())?.Select(g => new SelectListItem() { Text = g.GroupID.ToString(), Value = g.GroupID.ToString() }).ToList();
                        }
                        <select asp-for="@student.GroupID" class="form-control" asp-items="items"></select>
                    </div>
                    break;
                default:
                    break;
            }
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
