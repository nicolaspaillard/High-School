@using Models
@model Course
@using Application.Controllers.Services
@inject RepositoryService<Teacher> _teachers
@inject RepositoryService<Subject> _subjects
@inject RepositoryService<Classroom> _classrooms
@inject RepositoryService<Group> _groups
@inject RepositoryService<Course> _courses

<div class="row modal fade" id="edit-course" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addContactLabel">Modifier le cours : </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="EditCourse">
                    <input type="hidden" name="IsValid" value="@ViewData.ModelState.IsValid.ToString()" />
                    <input type="hidden" asp-for="CourseID" />
                    <div class="form-group">
                        <label class="control-label" for="Date">Date</label>
                        <input class="form-control" type="datetime-local" data-val="true" data-val-required="The Date field is required." id="Date" name="Date" value="Date.ToString(" yyyy-MM-dd hh:mm")">
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Teacher.LastName" class="control-label"></label>
                        <select asp-for="TeacherID" class="form-control" asp-items="@(await _teachers.GetAllAsync())?.Select(t => new SelectListItem() { Text=t.LastName, Value=t.PersonID.ToString() })"></select>
                        <span asp-validation-for="TeacherID" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Subject.SubjectID" class="control-label"></label>
                        <select asp-for="SubjectID" class="form-control" asp-items="@(await _subjects.GetAllAsync())?.Select(s => new SelectListItem() { Text=s.SubjectID.ToString(), Value=s.SubjectID.ToString() })"></select>
                        <span asp-validation-for="SubjectID" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ClassroomID" class="control-label"></label>
                        <select asp-for="ClassroomID" class="form-control" asp-items="@(await _classrooms.GetAllAsync())?.Select(c => new SelectListItem() { Text=c.Name, Value=c.ClassroomID.ToString() })"></select>
                        <span asp-validation-for="ClassroomID" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        @foreach (var item in (await _groups.GetAllAsync()).Select(g => new SelectListItem() { Text = g.GroupID.ToString(), Value = g.GroupID.ToString() }))
                        {
                            if(Model.Groups != null) item.Selected = Model.Groups.Select(g => g.GroupID).Contains(Int32.Parse(item.Value));
                            <label asp-for="@item.Text">Groupe @item.Text</label>
                            <input type="checkbox" name="GroupID" value="@item.Value" checked="@item.Selected" />
                        }
                        <span asp-validation-for="Groups" class="text-danger"></span>
                    </div>
                </form>
            </div>
            <div class="form-group modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                <button type="button" class="btn btn-primary" data-save="modal">Sauvegarder</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
